{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/App/App.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","services/api.js","components/App/App.jsx","index.js"],"names":["module","exports","SearchBar","onSubmit","useState","searchQuery","setSearchQuery","className","s","Searchbar","SearchForm","e","preventDefault","trim","toast","type","SearchFormButton","autoClose","SearchFormInput","autoComplete","name","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","ImageGalleryItem","onItemClick","id","webformatURL","largeImageURL","tags","src","alt","ImageGalleryItemImage","onClick","console","log","modalContent","ImageGallery","images","target","map","image","Modal","onBackdrop","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","Overlay","Button","onPress","Spinner","color","height","width","axios","defaults","baseURL","params","key","image_type","orientation","per_page","fetchImages","page","a","get","q","data","error","App","setModalContent","setPage","visibleImages","setVisibleImages","isLoading","setIsLoading","openModal","setOpenModal","getData","hits","scrollTo","top","document","documentElement","scrollHeight","behavior","toggleModal","isNotLastPage","length","btnEnable","query","itemId","element","find","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2238ed00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3VCp-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3fYYg\",\"Modal\":\"Modal_Modal__2nBTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__25gpy\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1_JTt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3xYtk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loader_Spinner__1-qhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2mNjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__-Tqvd\",\"SearchForm\":\"Searchbar_SearchForm__2_Wwr\",\"SearchFormButton\":\"Searchbar_SearchFormButton__32rHv\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2EJZL\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1nSWj\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ImSearch } from 'react-icons/im';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './Searchbar.module.css';\r\n\r\nfunction SearchBar({ onSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setSearchQuery(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (searchQuery.trim() === '') {\r\n      toast('Enter your query!');\r\n      return;\r\n    }\r\n\r\n    onSubmit(searchQuery);\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <ImSearch />\r\n        </button>\r\n        <ToastContainer autoClose={2000} />\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          name=\"searchQuery\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleChange}\r\n          value={searchQuery}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n\r\n// class SearchBar extends Component {\r\n//   state = {\r\n//     searchQuery: '',\r\n//   };\r\n\r\n//   handleChange = e => {\r\n//     this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\r\n//   };\r\n\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n//     if (this.state.searchQuery.trim() === '') {\r\n//       toast('Enter your query!');\r\n//       return;\r\n//     }\r\n\r\n//     this.props.onSubmit(this.state.searchQuery);\r\n//     this.setState({ searchQuery: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { searchQuery } = this.state;\r\n//     return (\r\n//       <header className={s.Searchbar}>\r\n//         <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n//           <button type=\"submit\" className={s.SearchFormButton}>\r\n//             <ImSearch />\r\n//           </button>\r\n//           <ToastContainer autoClose={2000} />\r\n//           <input\r\n//             className={s.SearchFormInput}\r\n//             type=\"text\"\r\n//             autoComplete=\"off\"\r\n//             name=\"searchQuery\"\r\n//             autoFocus\r\n//             placeholder=\"Search images and photos\"\r\n//             onChange={this.handleChange}\r\n//             value={searchQuery}\r\n//           />\r\n//         </form>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nfunction ImageGalleryItem({\r\n  onItemClick,\r\n  id,\r\n  webformatURL,\r\n  largeImageURL,\r\n  tags,\r\n}) {\r\n  const modalContent = id => {\r\n    onItemClick(id);\r\n    console.log(id);\r\n  };\r\n  return (\r\n    <img\r\n      src={webformatURL}\r\n      alt={tags}\r\n      data-src={largeImageURL}\r\n      className={s.ImageGalleryItemImage}\r\n      onClick={() => modalContent(id)}\r\n    />\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  onItemClick: PropTypes.func.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\n// class ImageGalleryItem extends Component {\r\n//   modalContent = id => {\r\n//     this.props.onItemClick(id);\r\n//     console.log(id);\r\n//   };\r\n//   render() {\r\n//     const { id, webformatURL, largeImageURL, tags } = this.props;\r\n//     return (\r\n//       <img\r\n//         src={webformatURL}\r\n//         alt={tags}\r\n//         data-src={largeImageURL}\r\n//         className={s.ImageGalleryItemImage}\r\n//         onClick={() => this.modalContent(id)}\r\n//       />\r\n//     );\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nfunction ImageGallery({ images, onItemClick, onClick }) {\r\n  const handleOpenModal = e => {\r\n    if (e.target !== e.currentTarget) {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul className={s.ImageGallery} onClick={handleOpenModal}>\r\n      {images &&\r\n        images.map(image => (\r\n          <li key={image.id} className={s.ImageGalleryItem}>\r\n            <ImageGalleryItem {...image} onItemClick={onItemClick} />\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  onItemClick: PropTypes.func.isRequired,\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\n//class ImageGallery extends Component {\r\n//   handleOpenModal = e => {\r\n//     if (e.target !== e.currentTarget) {\r\n//       this.props.onClick();\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     const { images, onItemClick } = this.props;\r\n//     return (\r\n//       <ul className={s.ImageGallery} onClick={this.handleOpenModal}>\r\n//         {images &&\r\n//           images.map(image => (\r\n//             <li key={image.id} className={s.ImageGalleryItem}>\r\n//               <ImageGalleryItem {...image} onItemClick={onItemClick} />\r\n//             </li>\r\n//           ))}\r\n//       </ul>\r\n//     );\r\n//   }\r\n// }\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nfunction Modal({ onBackdrop, largeImageURL, tags }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onBackdrop();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      onBackdrop();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.Overlay} onClick={handleBackdropClick}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImageURL} alt={tags} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onBackdrop: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n\r\n// class Modal extends Component {\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.handleKeyDown);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.handleKeyDown);\r\n//   }\r\n\r\n//   handleKeyDown = e => {\r\n//     if (e.code === 'Escape') {\r\n//       this.props.onBackdrop();\r\n//     }\r\n//   };\r\n\r\n//   handleBackdropClick = e => {\r\n//     if (e.target === e.currentTarget) {\r\n//       this.props.onBackdrop();\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     const { content, tags } = this.props;\r\n//     console.log(content);\r\n//     return (\r\n//       <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n//         <div className={s.Modal}>\r\n//           <img src={content} alt={tags} />\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ onPress }) => (\r\n  <button type=\"button\" onClick={onPress} className={s.Button}>\r\n    Load more\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onPress: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nconst Spinner = () => (\r\n  <div className={s.Spinner}>\r\n    <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\naxios.defaults.params = {\r\n  key: '24006178-a076599a61b558ce501b87587',\r\n  image_type: 'photo',\r\n  orientation: 'horizontal',\r\n  per_page: 12,\r\n};\r\n\r\nconst fetchImages = async (searchQuery, page) => {\r\n  try {\r\n    const { data } = await axios.get('', {\r\n      params: { q: searchQuery, page },\r\n    });\r\n\r\n    return data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nexport default fetchImages;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SearchBar from '../Searchbar';\r\nimport ImageGallery from '../ImageGallery';\r\nimport Modal from '../Modal';\r\nimport Button from '../Button';\r\nimport Loader from '../Loader';\r\nimport fetchImages from '../../services/api';\r\nimport s from './App.module.css';\r\n\r\nexport default function App() {\r\n  const [modalContent, setModalContent] = useState('');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [visibleImages, setVisibleImages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) return;\r\n\r\n    const getData = async () => {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const data = await fetchImages(searchQuery, page);\r\n        setVisibleImages(visibleImages => [...visibleImages, ...data.hits]);\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getData();\r\n  }, [searchQuery, page]);\r\n\r\n  const toggleModal = () => {\r\n    setOpenModal(openModal => !openModal);\r\n  };\r\n\r\n  const handleChangeQuery = query => {\r\n    setSearchQuery(query);\r\n    setPage(1);\r\n    setVisibleImages([]);\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setPage(page => page + 1);\r\n  };\r\n\r\n  const modalContentSet = itemId => {\r\n    const element = visibleImages.find(({ id }) => id === itemId);\r\n    setModalContent(element.largeImageURL);\r\n  };\r\n\r\n  const isNotLastPage = visibleImages.length / page === 12;\r\n  const btnEnable = visibleImages.length > 0 && !isLoading && isNotLastPage;\r\n  return (\r\n    <div className={s.App}>\r\n      <SearchBar onSubmit={handleChangeQuery} />\r\n      <>\r\n        <ImageGallery\r\n          images={visibleImages}\r\n          onClick={toggleModal}\r\n          onItemClick={modalContentSet}\r\n        />\r\n\r\n        {openModal && (\r\n          <Modal largeImageURL={modalContent} onBackdrop={toggleModal} />\r\n        )}\r\n        {isLoading && <Loader />}\r\n\r\n        {btnEnable && <Button name=\"Load more\" onPress={handleNextPage} />}\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}